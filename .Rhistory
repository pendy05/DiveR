gsub("(?:.*\\|){2}","\\1",df)
gsub(".*\\|){1}(.*)\\|","\\1",df)
gsub("(?:.*\\|){2}.*","\\1",df)
gsub("(?:.*\\|){1}.*","\\1",df)
gsub("(?:[^|]*\\|){2}([^|]^^.*)","\\2",df)
gsub("(?:.*\\|){1}^^.*","\\1",df)
s<-"CGA-DV-558_T_90.67.0_DV_1541_07"
pattern1 = paste0("(.*?_){", n,  "}")
temp = gsub(pattern1, "", s)
temp
pattern1 = paste0("(.*?_){", 2,  "}")
temp = gsub(pattern1, "", s)
temp
pattern1 = paste0("(.*?_){", 1,  "}")
temp = gsub(pattern1, "", s)
temp
gsub("(?:[^|]*\\|){2}([^|]^^.*)","\\2",df)
gsub("(?:[^|]*\\|){4}([^|]^^.*)","\\2",df)
gsub("(?:[^|]*\\|){4}([^|]^^.*)","",df)
MSA_GISAID<-read.alignment("C:\\desktop\\Research_BVU\\protocol\\DiveR_extra_metadataExtraction\\GISAID_spikeprot.fasta",format="fasta")
library(seqinr)
library(readr)
library(stringr)
library(dplyr)
MSA_GISAID<-read.alignment("C:\\desktop\\Research_BVU\\protocol\\DiveR_extra_metadataExtraction\\GISAID_spikeprot.fasta",format="fasta")
#extract header
GISAID.header<-str_extract(MSA_GISAID$nam,pattern="/.*[\\|EPI.*\\d{1,9}[0-9]|]")
GISAID.header
IDs <-
countries <- str_extract(GISAID.header, pattern='[^/].+?(?=/)')
pat <- sprintf('([^/]+/){%d}([^|]+).*', n)
years<- gsub("/","",sub(pat, '\\2', GISAID.header))
years
countries
gsub(".*(EPI[^|].*).*","\\1",df)
gsub(".*(EPI[^\\|].*).*","\\1",df)
gsub(".*(EPI[^\|].*).*","\\1",df)
gsub(".*(EPI[^|]*).*","\\1",df)
IDs <- gsub(".*(EPI[^|]*).*","\\1",GISAID.header)
IDs
# library(strex)
# string <- "ab..cd..de..fg..h"
# str_after_nth(string, "\\.\\.", 3)
# str_before_nth(string, "e", 1)
# str_before_nth(string, "\\.", -3)
# str_before_nth(string, ".", -3)
# str_before_nth(rep(string, 2), fixed("."), -3)
############################
#       NCBI Protein       #
############################
data <- read_file(file = "C:\\desktop\\Research_BVU\\protocol\\DiveR_extra_metadataExtraction\\NCBIProtein_B19V.gp")
accessionID<-str_extract_all(data,"VERSION\\s([A-Za-z0-9.*])\n")
accessionID
MSA_FLUDB<-read.alignment("C:\\desktop\\Research_BVU\\protocol\\DiveR_extra_metadataExtraction\\fludb_samples.fasta",format="fasta")
MSA_FLUDB$nam
MSA_FLUDB<-read.alignment("C:\\desktop\\Research_BVU\\protocol\\DiveR_extra_metadataExtraction\\fludb_samples.fasta",format="fasta", whole.header= T)
MSA_FLUDB$nam
GISAID.header
gsub(".*(EPI[^|]*).*","\\1",MSA_GISAID$nam)
str_extract(MSA_GISAID$nam, pattern='[^/].+?(?=/)')
gsub("/","",sub(pat, '\\2', MSA_GISAID$nam))
gsub("/","",sub(pat, '\\1', MSA_GISAID$nam))
gsub("/","",sub(pat, '\\1', MSA_GISAID$nam))
str_extract(MSA_GISAID$nam, pattern='[^/].+?(?=/)')
str_extract(MSA_GISAID$nam, pattern='[^/].+?(?=/)')
MSA_GISAID$nam
gsub("([^/]+/){3}([^|]+).*","\\1",MSA_GISAID$nam)
gsub("([^/]+/){4}([^|]+).*","\\1",MSA_GISAID$nam)
gsub("([^/]+/){3}([^|]+).*","\\1",MSA_GISAID$nam)
gsub("([^/]+/){3}([^|]+).*","\\2",MSA_GISAID$nam)
MSA_FLUDB$nam
gsub(".*(gb[^|]*).*","\\1",GISAID.header)
gsub(".*(gb[^|]*).*","\\1",MSA_FLUDB$nam)
MSA_FLUDB$nam
#IDs
gsub(".*(gb[^|]*).*","\\1",MSA_FLUDB$nam)
gsub(".*(gb[^|]*).*","\\1",MSA_FLUDB$nam)
gsub(".*(ncbiId[^|]*).*","\\1",MSA_FLUDB$nam)
gsub(".*(UniProtKB[^|]*).*","\\1",MSA_FLUDB$nam)
gsub(".*(ncbiId[^|]*).*","\\1",MSA_FLUDB$nam)
#IDs
gsub(".*(gb[^|]*).*","\\1",MSA_FLUDB$nam)
#IDs
gsub(".*gb([^|]*).*","\\1",MSA_FLUDB$nam)
#IDs
gsub(".*gb:([^|]*).*","\\1",MSA_FLUDB$nam)
gsub(".*(ncbiId[^|]*).*","\\1",MSA_FLUDB$nam)
gsub(".*ncbiId:([^|]*).*","\\1",MSA_FLUDB$nam)
gsub(".*(UniProtKB[^|]*).*","\\1",MSA_FLUDB$nam)
gsub(".*UniProtKB:([^|]*).*","\\1",MSA_FLUDB$nam)
library(seqinr)
library(readr)
library(stringr)
library(dplyr)
MSA_FLUDB<-read.alignment("C:\\desktop\\Research_BVU\\protocol\\DiveR_extra_metadataExtraction\\fludb_samples.fasta",format="fasta", whole.header= T)
MSA_FLUDB$nam
#IDs
#gsub(".*gb:([^|]*).*","\\1",MSA_FLUDB$nam)
IDs<- gsub(".*ncbiId:([^|]*).*","\\1",MSA_FLUDB$nam)
IDs
#gsub(".*UniProtKB:([^|]*).*","\\1",MSA_FLUDB$nam)
#countries
gsub(".*UniProtKB:([^|]*).*","\\1",MSA_FLUDB$nam)
MSA_FLUDB$nam
#gsub(".*UniProtKB:([^|]*).*","\\1",MSA_FLUDB$nam)
#countries
gsub(".*\([^\]*)\$.*","\\1",MSA_FLUDB$nam)
#gsub(".*UniProtKB:([^|]*).*","\\1",MSA_FLUDB$nam)
#countries
gsub(".*\\([^\]*)\$.*","\\1",MSA_FLUDB$nam)
#gsub(".*UniProtKB:([^|]*).*","\\1",MSA_FLUDB$nam)
#countries
gsub(".*\\([^\\]*)\$.*","\\1",MSA_FLUDB$nam)
#gsub(".*UniProtKB:([^|]*).*","\\1",MSA_FLUDB$nam)
#countries
gsub(".*/([^/]*)/$.*","\\1",MSA_FLUDB$nam)
#gsub(".*UniProtKB:([^|]*).*","\\1",MSA_FLUDB$nam)
#countries
gsub(".*/([^/]*)(.*/$)","\\2",MSA_FLUDB$nam)
#gsub(".*UniProtKB:([^|]*).*","\\1",MSA_FLUDB$nam)
#countries
gsub(".*/([^/]*)/.*(.*/$)","\\2",MSA_FLUDB$nam)
#gsub(".*UniProtKB:([^|]*).*","\\1",MSA_FLUDB$nam)
#countries
gsub(".*/([^/]*)/.*(.*/$)","\\1",MSA_FLUDB$nam)
#gsub(".*UniProtKB:([^|]*).*","\\1",MSA_FLUDB$nam)
#countries
gsub(".*/.*(.*/$)","\\1",MSA_FLUDB$nam)
#gsub(".*UniProtKB:([^|]*).*","\\1",MSA_FLUDB$nam)
#countries
gsub(".*/(.*/$)","\\1",MSA_FLUDB$nam)
MSA_FLUDB$nam
#gsub(".*UniProtKB:([^|]*).*","\\1",MSA_FLUDB$nam)
#countries
gsub(".*/(.*/$)","\\2",MSA_FLUDB$nam)
#gsub(".*UniProtKB:([^|]*).*","\\1",MSA_FLUDB$nam)
#countries
gsub("(.*/$)","\\1",MSA_FLUDB$nam)
#gsub(".*UniProtKB:([^|]*).*","\\1",MSA_FLUDB$nam)
#countries
gsub(".*(/$)","\\1",MSA_FLUDB$nam)
#gsub(".*UniProtKB:([^|]*).*","\\1",MSA_FLUDB$nam)
#countries
gsub(".*|(.*/$)","\\1",MSA_FLUDB$nam)
#gsub(".*UniProtKB:([^|]*).*","\\1",MSA_FLUDB$nam)
#countries
gsub(".*[^/]*(.*/$)","\\1",MSA_FLUDB$nam)
#gsub(".*UniProtKB:([^|]*).*","\\1",MSA_FLUDB$nam)
#countries
gsub(".*[^/](.*/$)","\\1",MSA_FLUDB$nam)
#gsub(".*UniProtKB:([^|]*).*","\\1",MSA_FLUDB$nam)
#countries
gsub(".*[^/](.*/)","\\1",MSA_FLUDB$nam)
#gsub(".*UniProtKB:([^|]*).*","\\1",MSA_FLUDB$nam)
header<-"gb:CY103885|ncbiId:AFC35429.1|UniProtKB:H6QM84|Organism:Influenza A virus (A/little yellow-shouldered bat/Guatemala/164/2009(H17N10))|Strain Name:A/little yellow-shouldered bat/Guatemala/164/2009|Protein Name:NP Nucleoprotein|Gene Symbol:NP|Segment:5|Subtype:H17N10|Host:Bat"
#countries
gsub(".*[^/](.*/)","\\0",MSA_FLUDB$nam)
#countries
gsub(".*[^/](.*/)","\\1",MSA_FLUDB$nam)
#countries
gsub(".*[^/]/(.*/)","\\1",MSA_FLUDB$nam)
#countries
gsub(".*[^/](.*/).*","\\1",MSA_FLUDB$nam)
#countries
gsub(".*[^/](/.*)/.*","\\1",MSA_FLUDB$nam)
#countries
gsub(".*[^/]/(.*)/.*","\\1",MSA_FLUDB$nam)
MSA_FLUDB$nam
gsub("(.*[^/]+/){}(.*)/.*","\\1",MSA_FLUDB$nam)
gsub("(.*[^/]+/){2}(.*)/.*","\\1",MSA_FLUDB$nam)
gsub("(.*[^/]+)/{2}(.*)/.*","\\1",MSA_FLUDB$nam)
gsub("(.*[^/]+/)/{2}(.*)/.*","\\1",MSA_FLUDB$nam)
gsub("(.*[^/]+/){2}(.*)/.*","\\1",MSA_FLUDB$nam)
gsub("(.*[^/]+)/{2}(.*)/.*","\\1",MSA_FLUDB$nam)
gsub("(.*[^/]+)/{1}(.*)/.*","\\1",MSA_FLUDB$nam)
gsub("(.*[^/]+)/{1}(.*)/.*","\\2",MSA_FLUDB$nam)
gsub("(.*[^/]+)/{1}(.*)/.*","\\2",MSA_FLUDB$nam)
gsub("(.*[^/]+)/{1}(.*)/.*","\\3",MSA_FLUDB$nam)
gsub("(.*[^/]+)/(.*)/.*","\\3",MSA_FLUDB$nam)
gsub("(.*[^/]+)/(.*)/(.*)/.*","\\3",MSA_FLUDB$nam)
gsub("(.*[^/]+)/(.*)/(.*)/.*","\\4",MSA_FLUDB$nam)
gsub("(.*[^/]+)/(.*)/(.*)/.*","\\2",MSA_FLUDB$nam)
gsub("(.*[^/]+)/(.*)/(.*)/.*","\\1",MSA_FLUDB$nam)
gsub("(.*[^/]+/)(.*)/(.*)/.*","\\1",MSA_FLUDB$nam)
gsub("(.*[^/]+/)(.*)/(.*)/.*","\\3",MSA_FLUDB$nam)
gsub("(.*[^/]+/)(.*)/(.*)/.*","\\4",MSA_FLUDB$nam)
gsub("(.*[^/]+/)(.*)/(.*)/.*","\\2",MSA_FLUDB$nam)
countries<-gsub("(.*[^/]+/)(.*)/.*","\\2",MSA_FLUDB$nam)
countries
countries<-gsub("(.*(?[^/])?+/)(.*)/(.*)/.*","\\2",MSA_FLUDB$nam)
countries<-gsub("(.*[^/]+/)(.*)/(.*)/.*","\\2",MSA_FLUDB$nam)
countries
#years
gsub("(.*[^/]+/)(.*/).*","\\2",MSA_FLUDB$nam)
#years
gsub("(.*[^/]+/)(.*)/(.*)/.*","\\3",MSA_FLUDB$nam)
#years
gsub("(.*[^/]+/)\)?(.*)/(.*)/.*","\\3",MSA_FLUDB$nam)
#years
gsub("(.*[^/]+/)\\)?(.*)/(.*)/.*","\\3",MSA_FLUDB$nam)
#years
gsub("|Strain Name(.*[^/]+/)\\)?(.*)/(.*)/.*","\\3",MSA_FLUDB$nam)
#years
gsub("|Strain Name(.*[^/]+/)\\)?(.*)/(.*)/.*","\\1",MSA_FLUDB$nam)
#years
gsub("|Strain Name(.*[^/]+/){4}(.*)/.*","\\2",MSA_FLUDB$nam)
#years
gsub("|Strain Name(.*[^/]+/){4}(.*)/.*","\\3",MSA_FLUDB$nam)
#years
gsub(".*|Strain Name(.*[^/]+/){4}(.*)/.*","\\3",MSA_FLUDB$nam)
#years
gsub(".*|Strain Name(.*[^/]+/){4}(.*)/.*","\\2",MSA_FLUDB$nam)
#years
gsub(".*|Strain Name(.*[^/]+/){4}(.*)/.*","\\1",MSA_FLUDB$nam)
#years
gsub(".*|Strain Name(.*[^/]+/){3}(.*)/.*","\\2",MSA_FLUDB$nam)
#years
gsub(".*|Strain Name.*(.*[^/]+/){3}(.*)/.*","\\2",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){3}(.*)/.*","\\2",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){4}(.*)/.*","\\2",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){3}(.*)/.*","\\2",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){4}(.*)|.*","\\2",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){4}(.*).*|.*","\\2",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){4}(.*)|Protein.*","\\2",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){4}(.*[^|])|Protein.*","\\2",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){4}(.*[^|]+)|Protein.*","\\2",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){4}(.*[^|]+).*","\\2",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){4}(.*[^|]+)|.*","\\2",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){4}(.*[^|]+|).*","\\2",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){4}(.*[^|]+|).*","\\2",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){3}(.*[^|]+|).*","\\2",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){3}(.*[^|])|.*","\\2",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){3}(.*[^|])|.*","\\1",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){3}(.*[^|])|Protein.*","\\2",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){3}(.*[^|]+)|Protein.*","\\2",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){3}([^|]*)|Protein.*","\\2",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){3}([^|]*)||Protein.*","\\2",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){3}([^|]*|)|Protein.*","\\2",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){3}([^|]*)|.*","\\2",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){3}([^|]*)|Protein.*","\\2",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){4}([^|]*)|Protein.*","\\2",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){5}([^|]*)|Protein.*","\\2",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){4}([^|]*)|Protein.*","\\2",MSA_FLUDB$nam)
#years
gsub(".*Strain Name(.*[^/]+/){4}([^|]*).*","\\2",MSA_FLUDB$nam)
# library(strex)
# string <- "ab..cd..de..fg..h"
# str_after_nth(string, "\\.\\.", 3)
# str_before_nth(string, "e", 1)
# str_before_nth(string, "\\.", -3)
# str_before_nth(string, ".", -3)
# str_before_nth(rep(string, 2), fixed("."), -3)
############################
#       NCBI Protein  - yet to done     #
############################
data <- read_file(file = "C:\\desktop\\Research_BVU\\protocol\\DiveR_extra_metadataExtraction\\NCBIProtein_B19V.gp")
accessionID<-str_extract_all(data,"VERSION\\s([A-Za-z0-9.*])\n")
# library(strex)
# string <- "ab..cd..de..fg..h"
# str_after_nth(string, "\\.\\.", 3)
# str_before_nth(string, "e", 1)
# str_before_nth(string, "\\.", -3)
# str_before_nth(string, ".", -3)
# str_before_nth(rep(string, 2), fixed("."), -3)
############################
#       NCBI Protein  - yet to done     #
############################
data <- read_file(file = "C:\\desktop\\Research_BVU\\protocol\\DiveR_extra_metadataExtraction\\NCBIProtein_B19V.gp")
gsub(".*VERSION    (.*)Protein.*","\\1",data)
str_extract_all(data,"VERSION    ([A-Za-z0-9])*\n")
str_extract_all(".*VERSION    (.*)Protein.*",data)
devtools::install_github("gschofl/biofiles")
library(biofiles)
install.packages("biofiles")
install.packages(c("XVector", "S4Vectors", "IRanges", "GenomicRanges", "GenomeInfoDb", "Biostrings", "BiocGenerics"))
MSA_GISAID<-read.alignment("C:\\desktop\\Research_BVU\\protocol\\DiveR_extra_metadataExtraction\\GISAID_spikeprot.fasta",format="fasta")
MSA_GISAID<-read.alignment("C:\\Users\\pendy\\Documents\\DiveR_extra_metadataExtraction\\GISAID_spikeprot.fasta",format="fasta")
#id
IDs<-gsub(".*(EPI[^|]*).*","\\1",MSA_GISAID$nam)
#year
years<-gsub("([^/]+/){3}([^|]+).*","\\2",MSA_GISAID$nam)
#countries
countries<-gsub("/","",sub(pat, '\\1', MSA_GISAID$nam))
#countries
pat <- sprintf('([^/]+/){%d}([^|]+).*', n)
countries<-gsub("/","",sub(pat, '\\1', MSA_GISAID$nam))
#countries
pat <- sprintf('([^/]+/){%d}([^|]+).*', n)
#countries
pat <- sprintf('([^/]+/){%d}([^|]+).*', 2)
countries<-gsub("/","",sub(pat, '\\1', MSA_GISAID$nam))
countries
#Entropy and incidence of total variants
library(ggplot2)
library(gridExtra) #tutorial: https://ggplot2.tidyverse.org/reference/facet_grid.html
library(facetscales) #https://stackoverflow.com/a/54074323/13970350
library(dplyr)
#load data from csv file
data<-read.csv("C:\\desktop\\DiveR\\www\\DiMA_HCV.csv")
df <- data.frame(data)
#NOTE: user is required to set the protein order here
#leave the protein order as default; follow the order in csv file
proteinOrder=""
#NOTE: user is required to input the number of host here
host <-1
#determine number of host
#scale the amino acid position for each protein
if (host ==1){ #single host
if (proteinOrder ==""){
a<-table(df$proteinName)
proteinName<-as.vector(names(a))
position<-as.vector(a)
df$size_f = factor(df$proteinName,levels = proteinName)
scales_x<-mapply(function(x,y){
x = scale_x_continuous(limits = c(0,y),breaks = seq(0,y,50))
}, proteinName,position)
}else{
#order the proteins based on user input
level<-strsplit(proteinOrder, ',')[[1]]
position<-c()
for (i in level){
position<-append(position,table(df$proteinName)[names(table(df$proteinName)) == i])
}
df$size_f = factor(df$proteinName,levels = level)
scales_x<-mapply(function(x,y){
x = scale_x_continuous(limits = c(0,y),breaks = seq(0,y,50))
}, level,position)
}
}else{ # multihost
#categorise data based on host
df$Host<- factor(df$Host)
#count the aa length for each proteins (each host is expected to have same number of proteins with same length)
df_sub<-df[df$Host==unique(df$Host[1]),]
if (proteinOrder ==""){
a<-table(df_sub$proteinName)
proteinName<-as.vector(names(a))
position<-as.vector(a)
df$size_f = factor(df$proteinName,levels = proteinName)
scales_x<-mapply(function(x,y){
x = scale_x_continuous(limits = c(0,y),breaks = seq(0,y,50))
}, proteinName,position)
}else{
#order the proteins based on user input
level<-strsplit(proteinOrder, ',')[[1]]
position<-c()
for (i in level){
position<-append(position,table(df_sub$proteinName)[names(table(df_sub$proteinName)) == i])
}
df$size_f = factor(df$proteinName,levels = level)
scales_x<-mapply(function(x,y){
x = scale_x_continuous(limits = c(0,y),breaks = seq(0,y,50))
}, level,position)
}
}
#---------------set zero entropy region-----------------#
#check if the kmer positions are zero entropy
#Reference for getting all the positions of kmer based on kmer size and the starting position of kmer:
#https://stackoverflow.com/questions/31120552/generate-a-sequence-of-numbers-with-repeated-intervals
#https://stackoverflow.com/questions/41637518/adding-a-shaded-rectangle-to-an-existing-plot-using-geom-rect
#determine the kmer size
kmer_size=9
#identify the kmer position with zero entropy
#position: startPosition with zero entropy
#end: startPosition + kmersize - 1
df_zeroEntropy<- df %>%
dplyr::group_by(proteinName)%>%
dplyr::summarize(
end = position[which(entropy == min(entropy))+kmer_size-1], #end: startPosition + kmersize - 1
position = position[which(entropy == min(entropy))] #extract those starting positions with zero entropy
)%>%
as.data.frame()
#concatenate df with df_zeroEntropy
df <-merge(df,df_zeroEntropy,id="position",all=T)
#replace NAN in column "zero entropy" with FALSE
df$end[is.na(df$end)]<- -1
#---------------set maximum y limit-----------------#
#if the max y value in data < 10 => maxy = 10
#if max y value in data > 10 => maxy = ceiling(max y value)
if (max(df$entropy) <= 10){
maxy <-10.0
}else if (max(df$entropy) > 10){
maxy <- ceiling(max(df$entropy))
}
#----------------plotting--------------------#
#detect if low support present
if (TRUE %in% df$lowSupport){
df$lowSupportPos <- -0.3
df$lowSupportPos[df$lowSupport ==TRUE]<- -0.5
plot1<-ggplot(df) +
geom_rect(inherit.aes = FALSE,
aes(xmin=position, xmax=end, ymin=-Inf, ymax=+Inf),
fill='#FFECAF', alpha=ifelse(df$end == -1, 0, 0.5))+
geom_area(mapping = aes(x = position, y = entropy,color= "k-mer Entropy", linetype="k-mer Entropy"), show.legend=F)+
geom_hline(mapping = aes(yintercept=9.2, color = "Reference: Maximum Entropy (9.2) for HIV-1 Clade B (Env Protein)", linetype = "Reference: Maximum Entropy (9.2) for HIV-1 Clade B (Env Protein)"), size= 0.2)+
geom_point(mapping = aes(x = position,y=lowSupportPos),col=ifelse(df$lowSupportPos==-0.5, 'black', ifelse(df$lowSupportPos==-0.3, 'white', 'white')), alpha=ifelse(df$lowSupportPos==-0.5, 1, ifelse(df$lowSupportPos==-0.3, 0,0)),pch=17)+
geom_line(mapping = aes(x = position, y = totalVariants.incidence * maxy / 100, color = "Total Variants",linetype="Total Variants"), size= 0.3 )+
geom_hline(mapping = aes( yintercept=98* maxy / 100, color = "Reference: Maximum Total Variants (98%) for HIV-1 Clade B (Env Protein)",linetype ="Reference: Maximum Total Variants (98%) for HIV-1 Clade B (Env Protein)"), size= 0.2)+
labs(y = "k-mer entropy (bits)\n",x= "\nk-mer position (aa)",color = "#f7238a")+
#how to second y-axis: https://whatalnk.github.io/r-tips/ggplot2-rbind.nb.html
scale_y_continuous(sec.axis = sec_axis(~ . * 100 / maxy , name = "Total variants (%)",breaks = c(0,25,50,75,100),labels=c("0","25","50","75","100")),
breaks = seq(0.0, maxy, length.out = 5),labels= sprintf(seq(0.0, maxy, length.out = 5), fmt = "%.1f")) +
theme_classic(base_size = 10) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.y.right = element_line(color = "#f7238a"),
axis.ticks.y.right = element_line(color = "#f7238a"),
axis.title.y.right =  element_text(color = "#f7238a"),
legend.position="bottom"
)+
scale_colour_manual("",
values = c("Reference: Maximum Total Variants (98%) for HIV-1 Clade B (Env Protein)"="#f7238a",
"Reference: Maximum Entropy (9.2) for HIV-1 Clade B (Env Protein)"="black",
"k-mer Entropy" = "black",
"Total Variants"="#f7238a"),
guide = guide_legend(override.aes=aes(fill=NA)))+
scale_linetype_manual("",values=c("Reference: Maximum Total Variants (98%) for HIV-1 Clade B (Env Protein)"=5,
"Reference: Maximum Entropy (9.2) for HIV-1 Clade B (Env Protein)"=5,
"k-mer Entropy" = 1,
"Total Variants"=1))
#number of host
if (host == 1){ #one host
plot1 +facet_grid_sc(col=vars(df$size_f),scales = list(x = scales_x),space = "free",switch = "x")
}else{ # multi host
plot1 +facet_grid_sc(rows = vars(df$host),col=vars(df$size_f),scales = list(x = scales_x),space = "free",switch = "both")
}
}else{
plot1<-ggplot(df) +
geom_area(mapping = aes(x = position, y = entropy,color= "k-mer Entropy", linetype="k-mer Entropy"),show.legend = F)+
geom_hline(mapping = aes(yintercept=9.2, color = "Reference: Maximum Entropy (9.2) for HIV-1 Clade B (Env Protein)", linetype = "Reference: Maximum Entropy (9.2) for HIV-1 Clade B (Env Protein)"), size= 0.2)+
#geom_line(mapping = aes(x = position, y = totalVariants.incidence * maxy / 100, color = "Total Variants",linetype="Total Variants"), size= 0.3 )+
#geom_hline(mapping = aes( yintercept=98 * maxy /100, color = "Reference: Maximum Total Variants (98%) for HIV-1 Clade B (Env Protein)",linetype ="Reference: Maximum Total Variants (98%) for HIV-1 Clade B (Env Protein)"), size= 0.2)+
labs(y = "k-mer entropy (bits)\n",x= "\nk-mer position (aa)",color = "#f7238a")+
#how to second y-axis: https://whatalnk.github.io/r-tips/ggplot2-rbind.nb.html
#scale_y_continuous(sec.axis = sec_axis(~ . * 100 / maxy , name = "Total variants (%)",breaks = c(0,25,50,75,100),labels=c("0","25","50","75","100")),
#                   breaks = seq(0.0, maxy, length.out = 5),labels= sprintf(seq(0.0, maxy, length.out = 5), fmt = "%.1f")) +
scale_y_continuous(limits = c(0, maxy), breaks = seq(0, maxy, by = 2.5))+
theme_classic(base_size = 15) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line.y.right = element_line(color = "#f7238a"),
axis.ticks.y.right = element_line(color = "#f7238a"),
axis.title.y.right =  element_text(color = "#f7238a"),
legend.position="bottom"
)+
scale_colour_manual("",
values = c(
"Reference: Maximum Entropy (9.2) for HIV-1 Clade B (Env Protein)"="black",
"k-mer Entropy" = "black"
),
guide = guide_legend(override.aes=aes(fill=NA)))+
scale_linetype_manual("",values=c(
"Reference: Maximum Entropy (9.2) for HIV-1 Clade B (Env Protein)"=5,
"k-mer Entropy" = 1))
#number of host
if (host == 1){ #one host
plot1 +facet_grid_sc(col=vars(df$size_f),scales = list(x = scales_x),space = "free",switch = "x")
}else{ # multi host
plot1 +facet_grid_sc(rows = vars(df$host),col=vars(df$size_f),scales = list(x = scales_x),space = "free",switch = "both")
}
}
#save image, modify based on need
ggsave("plot-Entropy-and-incidence-of-totalvariants.jpg",dpi=600,height= 7,width = 10,unit="in",device = 'jpg')
#save image, modify based on need
ggsave("plot-Entropy-and-incidence-of-totalvariants.jpg",dpi=600,height= 7,width = 10,unit="in",device = 'jpg')
#save image, modify based on need
ggsave("plot-Entropy-and-incidence-of-totalvariants.jpg",dpi=600,height= 7,width = 12,unit="in",device = 'jpg')
#save image, modify based on need
ggsave("plot-Entropy-and-incidence-of-totalvariants.jpg",dpi=600,height= 7.5 ,width = 15,unit="in",device = 'jpg')
#save image, modify based on need
ggsave("plot-Entropy-and-incidence-of-totalvariants.jpg",dpi=600,height= 7.5 ,width = 15,unit="in",device = 'jpg')
shiny::runApp('C:/projects/DiveR_public/DiveR')
runApp('C:/projects/DiveR_public/DiveR')
runApp('C:/projects/DiveR_public/DiveR')
runApp('C:/projects/DiveR_public/DiveR')
runApp('C:/projects/DiveR_public/DiveR')
runApp('C:/projects/DiveR_public/DiveR')
runApp('C:/projects/DiveR_public/DiveR')
runApp('C:/projects/DiveR_public/DiveR')
runApp('C:/projects/DiveR_public/DiveR')
runApp('C:/projects/DiveR_public/DiveR')
runApp('C:/projects/DiveR_public/DiveR')
runApp('C:/projects/DiveR_public/DiveR')
runApp('C:/projects/DiveR_public/DiveR')
runApp('C:/projects/DiveR_public/DiveR')
runApp('C:/projects/DiveR_public/DiveR')
